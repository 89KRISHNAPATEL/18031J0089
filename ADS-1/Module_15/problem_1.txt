public void put(Key key, Value val) {
        if (key == -------------) throw new IllegalArgumentException("first argument to put() is null");  //Blank1
        if (val == null) {
            delete(-----------------);   //Blank2
            return;
        }
        for (Node x = first; x != null; x = ------------) { //Blank3
            if (key.equals(-----------)) { //Blank4
                x.val = val;
                return;
            }
        }
        first = new Node(key, val,------------------); //Blank5
        n++;
    }

Blank1:val



Blank2:key



Blank3:x.next



Blank4:x.key



Blank5:size


public int rank(Key key) {
        if (key == null) throw new IllegalArgumentException("argument to rank() is null"); 


        int lo = 0, hi = n-1; 
        while (lo <= --------) {  //Blank 1
            int mid = lo + (hi - lo) / 2; 
            int cmp = key.compareTo(keys[----------]);  //Blank 2
            if      (cmp < 0) hi = mid - 1; 
            else if (cmp > 0) lo = mid + 1; 
            else return ---------------------; //Blank 3
        } 
        return lo;
    }


Blank1:-


Blank2:-



Blank3:-

What will be the value return by max() method when it is performed on above ST 

ans:return the max value of given array.


What will be the value return by min() method when it is performed on above ST

ans:Return the min value of the given st


What will be the value return by select(2) method when it is performed on above ST

ans:return the key of the rank key.


What will be the value return by get(R) method when it is performed on above ST

ans:return the value paired given key


What will be the value return by floor(N) method when it is performed on above ST

ans:return smallest value of the given key 
    condition is( Lessthan or equal to )


What will be the value return by ceiling(N) method when it is performed on above ST

ans:return Greter than or equal to n value 